name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd Concordia_Campus_App
          npm install

      - name: Install Homebrew (if missing)
        run: |
          if ! command -v brew &> /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          brew tap mobile-dev-inc/tap
          brew install maestro

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Set up iPhone 16 Pro Simulator
        run: |
          DEVICE_NAME="iPhone 16 Pro"
          RUNTIME="com.apple.CoreSimulator.SimRuntime.iOS-18-2"  # Updated to match available runtime
          DEVICE_TYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro"

          # Check if device already exists
          EXISTING_DEVICE=$(xcrun simctl list devices | grep "$DEVICE_NAME" | awk -F '[()]' '{print $2}')
          if [ -z "$EXISTING_DEVICE" ]; then
            echo "Creating new iPhone 16 Pro simulator..."
            DEVICE_UDID=$(xcrun simctl create "$DEVICE_NAME" "$DEVICE_TYPE" "$RUNTIME")
          else
            DEVICE_UDID=$EXISTING_DEVICE
          fi

          echo "Booting simulator..."
          xcrun simctl boot "$DEVICE_UDID"
          
          # Wait for the simulator to boot
          sleep 10
          
          # Ensure the simulator is booted
          xcrun simctl list devices | grep Booted || echo "Simulator did not boot correctly"

      - name: Run Expo App in Simulator
        run: |
          cd Concordia_Campus_App
          npx expo run:ios  # Run in foreground for better debugging

      - name: Run All Maestro E2E Tests
        run: |
          cd Concordia_Campus_App/maestro
          find . -name "*.yml" -type f | while read testfile; do
            echo "Running Maestro test: $testfile"
            maestro test "$testfile"
          done
